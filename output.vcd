$date
	Sat Oct 14 22:09:13 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_processor $end
$var wire 32 ! inst_o_WB [31:0] $end
$var wire 32 " inst_o_ME [31:0] $end
$var wire 32 # inst_o_IF [31:0] $end
$var wire 32 $ inst_o_ID [31:0] $end
$var wire 32 % inst_o_EX [31:0] $end
$var reg 1 & clk $end
$var reg 1 ' reset $end
$var reg 1 ( start $end
$scope module processor $end
$var wire 1 & clk $end
$var wire 32 ) inst_o_WB [31:0] $end
$var wire 1 ' reset $end
$var wire 1 ( start $end
$var wire 1 * rs2_re $end
$var wire 32 + rs2_data [31:0] $end
$var wire 5 , rs2_addr [4:0] $end
$var wire 1 - rs1_re $end
$var wire 32 . rs1_data [31:0] $end
$var wire 5 / rs1_addr [4:0] $end
$var wire 1 0 rd_we_wb $end
$var wire 1 1 rd_we_out $end
$var wire 1 2 rd_we $end
$var wire 1 3 rd_en $end
$var wire 32 4 rd_data_out_to_register [31:0] $end
$var wire 32 5 rd_data_out [31:0] $end
$var wire 32 6 rd_data [31:0] $end
$var wire 5 7 rd_addr_wb [4:0] $end
$var wire 5 8 rd_addr_to_register [4:0] $end
$var wire 5 9 rd_addr_out [4:0] $end
$var wire 5 : rd_addr [4:0] $end
$var wire 32 ; ram_location [31:0] $end
$var wire 32 < pc_to_ID [31:0] $end
$var wire 32 = pc_to_EX [31:0] $end
$var wire 32 > pc [31:0] $end
$var wire 32 ? op2 [31:0] $end
$var wire 32 @ op1 [31:0] $end
$var wire 32 A memory_offset [31:0] $end
$var wire 3 B mem_flag [2:0] $end
$var wire 32 C mem_addr_mem [31:0] $end
$var wire 32 D inst_o_ROM [31:0] $end
$var wire 32 E inst_o_ME [31:0] $end
$var wire 32 F inst_o_IF [31:0] $end
$var wire 32 G inst_o_ID [31:0] $end
$var wire 32 H inst_o_EX [31:0] $end
$var wire 32 I data_to_memory_from_ex [31:0] $end
$var wire 32 J data_to_RAM [31:0] $end
$var wire 32 K data_from_RAM [31:0] $end
$var wire 32 L branch_address [31:0] $end
$var wire 1 M branch $end
$var wire 4 N alu_control [3:0] $end
$var wire 32 O addr_to_ROM [31:0] $end
$var wire 1 P RAM_we $end
$var wire 1 Q RAM_re $end
$scope module MM $end
$var wire 32 R inst_out_mem [31:0] $end
$var wire 1 ' reset $end
$var wire 1 2 rd_we $end
$var wire 32 S rd_data [31:0] $end
$var wire 5 T rd_addr [4:0] $end
$var wire 32 U mem_location [31:0] $end
$var wire 3 V mem_flag [2:0] $end
$var wire 32 W inst_from_ex [31:0] $end
$var wire 32 X data_to_memory_from_ex [31:0] $end
$var wire 32 Y data_from_RAM [31:0] $end
$var reg 1 Q RAM_re $end
$var reg 1 P RAM_we $end
$var reg 32 Z data_to_RAM [31:0] $end
$var reg 32 [ ram_location [31:0] $end
$var reg 5 \ rd_addr_out [4:0] $end
$var reg 32 ] rd_data_out [31:0] $end
$var reg 1 1 rd_we_out $end
$upscope $end
$scope module ex $end
$var wire 32 ^ data_to_memory_from_ex [31:0] $end
$var wire 1 ' reset $end
$var wire 32 _ result [31:0] $end
$var wire 1 2 rd_we $end
$var wire 5 ` rd_addr [4:0] $end
$var wire 32 a op2 [31:0] $end
$var wire 32 b op1 [31:0] $end
$var wire 32 c mem_offset [31:0] $end
$var wire 32 d inst_from_Decode [31:0] $end
$var wire 4 e alu_control [3:0] $end
$var reg 32 f inst_to_mem [31:0] $end
$var reg 32 g mem_addr_mem [31:0] $end
$var reg 3 h mem_flag [2:0] $end
$var reg 4 i op_alu [3:0] $end
$var reg 5 j rd_addr_wb [4:0] $end
$var reg 32 k rd_data [31:0] $end
$var reg 1 0 rd_we_wb $end
$var reg 32 l rs1_alu [31:0] $end
$var reg 32 m rs2_alu [31:0] $end
$var reg 32 n rs3_alu [31:0] $end
$scope module alu_ex $end
$var wire 4 o alu_operation [3:0] $end
$var wire 1 ' reset $end
$var wire 32 p rs1 [31:0] $end
$var wire 32 q rs2 [31:0] $end
$var wire 32 r rs3 [31:0] $end
$var reg 32 s rd [31:0] $end
$var reg 5 t rs2_5b [4:0] $end
$upscope $end
$upscope $end
$scope module id $end
$var wire 1 ' reset $end
$var wire 32 u rs3_data [31:0] $end
$var wire 32 v rs2_data [31:0] $end
$var wire 5 w rs2 [4:0] $end
$var wire 32 x rs1_data [31:0] $end
$var wire 5 y rs1 [4:0] $end
$var wire 5 z rd [4:0] $end
$var wire 32 { pc [31:0] $end
$var wire 7 | opcode [6:0] $end
$var wire 32 } instruction [31:0] $end
$var wire 7 ~ funct7 [6:0] $end
$var wire 3 !" funct3 [2:0] $end
$var wire 32 "" cal_branch_addr [31:0] $end
$var wire 20 #" U_type_imm [19:0] $end
$var wire 12 $" S_imm [11:0] $end
$var wire 32 %" SB_type_addr [31:0] $end
$var wire 12 &" I_imm [11:0] $end
$var reg 4 '" alu_control [3:0] $end
$var reg 1 M br $end
$var reg 32 (" br_location [31:0] $end
$var reg 10 )" funct7_3 [9:0] $end
$var reg 32 *" imm_data [31:0] $end
$var reg 32 +" instr_to_nextstage [31:0] $end
$var reg 32 ," memory_offset [31:0] $end
$var reg 32 -" op1 [31:0] $end
$var reg 32 ." op2 [31:0] $end
$var reg 32 /" op3 [31:0] $end
$var reg 32 0" pc_to_nextstage [31:0] $end
$var reg 5 1" rd_addr [4:0] $end
$var reg 1 2 rd_write_enable $end
$var reg 5 2" rs1_addr [4:0] $end
$var reg 1 - rs1_read_enable $end
$var reg 5 3" rs2_addr [4:0] $end
$var reg 1 * rs2_read_enable $end
$var reg 5 4" rs3_addr [4:0] $end
$var reg 1 5" rs3_read_enable $end
$upscope $end
$scope module iff $end
$var wire 1 M branch $end
$var wire 1 ' reset $end
$var wire 32 6" pc_into_IF [31:0] $end
$var wire 32 7" inst_from_ROM [31:0] $end
$var reg 32 8" addr_to_ROM [31:0] $end
$var reg 32 9" inst_to_decode [31:0] $end
$var reg 32 :" pc_to_ID [31:0] $end
$var reg 1 3 rd_en $end
$upscope $end
$scope module mem $end
$var wire 1 3 en $end
$var wire 32 ;" pc_addr [31:0] $end
$var reg 32 <" instruction [31:0] $end
$upscope $end
$scope module mm $end
$var wire 32 =" address [31:0] $end
$var wire 1 & clk $end
$var wire 32 >" data_into_RAM [31:0] $end
$var wire 1 Q rd_en $end
$var wire 1 ' reset $end
$var wire 1 P wr_en $end
$var parameter 32 ?" MAXSIZE $end
$var reg 32 @" data_from_RAM [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 A" k [31:0] $end
$upscope $end
$upscope $end
$scope module p $end
$var wire 1 M branch $end
$var wire 32 B" branch_address [31:0] $end
$var wire 1 & clk $end
$var wire 1 ' reset $end
$var wire 1 C" stall $end
$var wire 1 ( start $end
$var reg 32 D" pc [31:0] $end
$upscope $end
$scope module rb $end
$var wire 1 E" clk $end
$var wire 1 2 rd_we $end
$var wire 1 F" reset $end
$var wire 5 G" rs1_addr [4:0] $end
$var wire 1 - rs1_re $end
$var wire 5 H" rs2_addr [4:0] $end
$var wire 1 * rs2_re $end
$var wire 32 I" rd_data_from_wb [31:0] $end
$var wire 5 J" rd_addr [4:0] $end
$var reg 32 K" rs1_data [31:0] $end
$var reg 32 L" rs2_data [31:0] $end
$upscope $end
$scope module wb $end
$var wire 5 M" rd_addr_from_mem [4:0] $end
$var wire 32 N" rd_data_from_mem [31:0] $end
$var wire 1 ' reset $end
$var wire 1 1 we $end
$var reg 5 O" rd_addr_to_register [4:0] $end
$var reg 32 P" rd_data_out_to_register [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000000000000 ?"
$end
#0
$dumpvars
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
zF"
zE"
bx D"
0C"
bx B"
bx A"
bx @"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
x5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
b0 ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx0 %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bz u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
b0 a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
xQ
xP
bx O
bx N
xM
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
b0 ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
13
x2
x1
x0
bx /
bx .
x-
bx ,
bx +
x*
bz )
1(
0'
0&
bx %
bx $
bx #
bx "
bz !
$end
#5000
b11111111111111111111111111111100 >
b11111111111111111111111111111100 6"
b11111111111111111111111111111100 D"
b0 "
b0 E
b0 R
b0 %
b0 H
b0 W
b0 f
b0 C
b0 U
b0 g
00
b0 +
b0 v
b0 L"
b0 .
b0 x
b0 K"
b0 #"
b0 ""
b0 %"
b0 $"
b0 &"
b0 z
b0 w
b0 y
b0 ~
b0 !"
b0 |
b0 $
b0 G
b0 d
b0 +"
b0 =
b0 0"
0P
0Q
01
b0 9
b0 \
b0 M"
b0 5
b0 ]
b0 N"
b0 J
b0 Z
b0 >"
b0 ;
b0 [
b0 ="
b0 6
b0 S
b0 k
b0 7
b0 T
b0 j
b0 i
b0 o
b0 n
b0 r
b0 m
b0 q
b0 l
b0 p
b0 _
b0 s
b0 I
b0 X
b0 ^
b0 @
b0 b
b0 -"
02
b0 L
b0 ("
b0 B"
0M
b0 A
b0 c
b0 ,"
b0 N
b0 e
b0 '"
b0 /
b0 2"
b0 G"
b0 ,
b0 3"
b0 H"
b0 4"
b0 :
b0 `
b0 1"
0-
0*
05"
03
b0 #
b0 F
b0 }
b0 9"
b0 <
b0 {
b0 :"
b0 8
b0 J"
b0 O"
b0 4
b0 I"
b0 P"
b111111111111 A"
1'
1&
#10000
b11000001000010001111111 D
b11000001000010001111111 7"
b11000001000010001111111 <"
bx 5
bx ]
bx N"
b11000001000010001111111 "
b11000001000010001111111 E
b11000001000010001111111 R
b11000001000010001111111 %
b11000001000010001111111 H
b11000001000010001111111 W
b11000001000010001111111 f
bx 6
bx S
bx k
b11000001000 #"
b1000 %"
b1000 $"
b110 &"
b1000 z
b110 w
b1 y
b0 ~
b0 !"
b1111111 |
b11000001000010001111111 $
b11000001000010001111111 G
b11000001000010001111111 d
b11000001000010001111111 +"
b11111111111111111111111111111100 =
b11111111111111111111111111111100 0"
bx _
bx s
bx ?
bx a
bx ."
b0 )"
13
b11000001000010001111111 #
b11000001000010001111111 F
b11000001000010001111111 }
b11000001000010001111111 9"
b100 ""
b11111111111111111111111111111100 <
b11111111111111111111111111111100 {
b11111111111111111111111111111100 :"
b11111111111111111111111111111100 O
b11111111111111111111111111111100 8"
b11111111111111111111111111111100 ;"
0'
0&
#15000
b100 5
b100 ]
b100 N"
b100 6
b100 S
b100 k
b100 _
b100 s
b1 8
b1 J"
b1 O"
b100 4
b100 I"
b100 P"
b11 i
b11 o
b100 m
b100 q
b100 ?
b100 a
b100 ."
b1 9
b1 \
b1 M"
11
10
b1 7
b1 T
b1 j
b11 N
b11 e
b11 '"
b100 *"
12
b1 :
b1 `
b1 1"
1-
b10000000000000010010011 "
b10000000000000010010011 E
b10000000000000010010011 R
b10000000000000010010011 %
b10000000000000010010011 H
b10000000000000010010011 W
b10000000000000010010011 f
b10000000000 #"
b100000000000 %"
b1 $"
b100 &"
b1 z
b100 w
b0 y
b10011 |
b10000000000000010010011 $
b10000000000000010010011 G
b10000000000000010010011 d
b10000000000000010010011 +"
b10000000000000010010011 #
b10000000000000010010011 F
b10000000000000010010011 }
b10000000000000010010011 9"
b10000000000000010010011 D
b10000000000000010010011 7"
b10000000000000010010011 <"
b0 =
b0 0"
b100000000000 ""
b0 <
b0 {
b0 :"
b0 O
b0 8"
b0 ;"
b0 >
b0 6"
b0 D"
1&
#20000
0&
#25000
b10000 4
b10000 I"
b10000 P"
b10000 5
b10000 ]
b10000 N"
b10000 6
b10000 S
b10000 k
b10000 _
b10000 s
b100 8
b100 J"
b100 O"
b10000 m
b10000 q
b100 9
b100 \
b100 M"
b10000 ?
b10000 a
b10000 ."
b100 7
b100 T
b100 j
b10000 *"
b100 :
b100 `
b100 1"
b1000000000000001000010011 "
b1000000000000001000010011 E
b1000000000000001000010011 R
b1000000000000001000010011 %
b1000000000000001000010011 H
b1000000000000001000010011 W
b1000000000000001000010011 f
b1000000000000 #"
b100 %"
b100 $"
b10000 &"
b100 z
b10000 w
b1000000000000001000010011 $
b1000000000000001000010011 G
b1000000000000001000010011 d
b1000000000000001000010011 +"
b1000000000000001000010011 #
b1000000000000001000010011 F
b1000000000000001000010011 }
b1000000000000001000010011 9"
b1000000000000001000010011 D
b1000000000000001000010011 7"
b1000000000000001000010011 <"
b100 =
b100 0"
b1000 ""
b100 <
b100 {
b100 :"
b100 O
b100 8"
b100 ;"
b100 >
b100 6"
b100 D"
1&
#30000
0&
#35000
b100011 4
b100011 I"
b100011 P"
b100011 5
b100011 ]
b100011 N"
b100011 6
b100011 S
b100011 k
b100011 _
b100011 s
b110 8
b110 J"
b110 O"
b100011 m
b100011 q
b110 9
b110 \
b110 M"
b100011 ?
b100011 a
b100011 ."
b110 7
b110 T
b110 j
b100011 *"
b110 :
b110 `
b110 1"
b1000 )"
b10001100000000001100010011 "
b10001100000000001100010011 E
b10001100000000001100010011 R
b10001100000000001100010011 %
b10001100000000001100010011 H
b10001100000000001100010011 W
b10001100000000001100010011 f
b10001100000000 #"
b100110 %"
b100110 $"
b100011 &"
b110 z
b11 w
b1 ~
b10001100000000001100010011 $
b10001100000000001100010011 G
b10001100000000001100010011 d
b10001100000000001100010011 +"
b10001100000000001100010011 #
b10001100000000001100010011 F
b10001100000000001100010011 }
b10001100000000001100010011 9"
b10001100000000001100010011 D
b10001100000000001100010011 7"
b10001100000000001100010011 <"
b1000 =
b1000 0"
b101110 ""
b1000 <
b1000 {
b1000 :"
b1000 O
b1000 8"
b1000 ;"
b1000 >
b1000 6"
b1000 D"
1&
#40000
0&
#45000
b110011 4
b110011 I"
b110011 P"
b110011 5
b110011 ]
b110011 N"
b110011 6
b110011 S
b110011 k
b110011 _
b110011 s
b1001 8
b1001 J"
b1001 O"
b110011 m
b110011 q
b1001 9
b1001 \
b1001 M"
b110011 ?
b110011 a
b110011 ."
b1001 7
b1001 T
b1001 j
b110011 *"
b1001 :
b1001 `
b1001 1"
b11001100000000010010010011 "
b11001100000000010010010011 E
b11001100000000010010010011 R
b11001100000000010010010011 %
b11001100000000010010010011 H
b11001100000000010010010011 W
b11001100000000010010010011 f
b11001100000000 #"
b100000101000 %"
b101001 $"
b110011 &"
b1001 z
b10011 w
b11001100000000010010010011 $
b11001100000000010010010011 G
b11001100000000010010010011 d
b11001100000000010010010011 +"
b11001100000000010010010011 #
b11001100000000010010010011 F
b11001100000000010010010011 }
b11001100000000010010010011 9"
b11001100000000010010010011 D
b11001100000000010010010011 7"
b11001100000000010010010011 <"
b1100 =
b1100 0"
b100000110100 ""
b1100 <
b1100 {
b1100 :"
b1100 O
b1100 8"
b1100 ;"
b1100 >
b1100 6"
b1100 D"
1&
#50000
0&
#55000
b1000 6
b1000 S
b1000 k
b0 5
b0 ]
b0 N"
b1000 ;
b1000 [
b1000 ="
1P
b1000 C
b1000 U
b1000 g
b1000 _
b1000 s
b0 8
b0 J"
b0 O"
b0 4
b0 I"
b0 P"
b10 B
b10 V
b10 h
b100 m
b100 q
b100 l
b100 p
b0 9
b0 \
b0 M"
01
00
b0 7
b0 T
b0 j
b100 ?
b100 a
b100 ."
b100 +
b100 v
b100 L"
b1010 N
b1010 e
b1010 '"
b100 A
b100 c
b100 ,"
b0 *"
02
b0 :
b0 `
b0 1"
b1 ,
b1 3"
b1 H"
1*
b10 )"
b100000010001000100011 "
b100000010001000100011 E
b100000010001000100011 R
b100000010001000100011 %
b100000010001000100011 H
b100000010001000100011 W
b100000010001000100011 f
b100000010 #"
b100 %"
b100 $"
b1 &"
b100 z
b1 w
b0 ~
b10 !"
b100011 |
b100000010001000100011 $
b100000010001000100011 G
b100000010001000100011 d
b100000010001000100011 +"
b100000010001000100011 #
b100000010001000100011 F
b100000010001000100011 }
b100000010001000100011 9"
b100000010001000100011 D
b100000010001000100011 7"
b100000010001000100011 <"
b10000 =
b10000 0"
b10100 ""
b10000 <
b10000 {
b10000 :"
b10000 O
b10000 8"
b10000 ;"
b10000 >
b10000 6"
b10000 D"
1&
#60000
0&
#65000
b11111 ;
b11111 [
b11111 ="
b11111 6
b11111 S
b11111 k
b10000 J
b10000 Z
b10000 >"
b11111 _
b11111 s
b10000 I
b10000 X
b10000 ^
b10000 @
b10000 b
b10000 -"
b1111 m
b1111 q
b10000 l
b10000 p
b11111 C
b11111 U
b11111 g
10
b1010 7
b1010 T
b1010 j
b1111 ?
b1111 a
b1111 ."
b0 +
b0 v
b0 L"
b10000 .
b10000 x
b10000 K"
b11 N
b11 e
b11 '"
b0 A
b0 c
b0 ,"
b1111 *"
12
b1010 :
b1010 `
b1010 1"
b0 ,
b0 3"
b0 H"
b100 /
b100 2"
b100 G"
0*
b0 )"
b111100100000010100010011 "
b111100100000010100010011 E
b111100100000010100010011 R
b111100100000010100010011 %
b111100100000010100010011 H
b111100100000010100010011 W
b111100100000010100010011 f
b111100100000 #"
b1010 %"
b1010 $"
b1111 &"
b1010 z
b1111 w
b100 y
b0 !"
b10011 |
b111100100000010100010011 $
b111100100000010100010011 G
b111100100000010100010011 d
b111100100000010100010011 +"
b111100100000010100010011 #
b111100100000010100010011 F
b111100100000010100010011 }
b111100100000010100010011 9"
b111100100000010100010011 D
b111100100000010100010011 7"
b111100100000010100010011 <"
b10100 =
b10100 0"
b11110 ""
b10100 <
b10100 {
b10100 :"
b10100 O
b10100 8"
b10100 ;"
b10100 >
b10100 6"
b10100 D"
1&
#70000
0&
#75000
b10011 ;
b10011 [
b10011 ="
b10011 C
b10011 U
b10011 g
b10011 6
b10011 S
b10011 k
b100011 J
b100011 Z
b100011 >"
b100011 l
b100011 p
b10011 _
b10011 s
b100011 I
b100011 X
b100011 ^
b100011 @
b100011 b
b100011 -"
b100 i
b100 o
b10000 m
b10000 q
b10000 ?
b10000 a
b10000 ."
b10000 +
b10000 v
b10000 L"
b100011 .
b100011 x
b100011 K"
b100 N
b100 e
b100 '"
b0 *"
b100 ,
b100 3"
b100 H"
b110 /
b110 2"
b110 G"
1*
b100000000 )"
b1000000010000110000010100110011 "
b1000000010000110000010100110011 E
b1000000010000110000010100110011 R
b1000000010000110000010100110011 %
b1000000010000110000010100110011 H
b1000000010000110000010100110011 W
b1000000010000110000010100110011 f
b1000000010000110000 #"
b10000001010 %"
b10000001010 $"
b10000000100 &"
b100 w
b110 y
b100000 ~
b110011 |
b1000000010000110000010100110011 $
b1000000010000110000010100110011 G
b1000000010000110000010100110011 d
b1000000010000110000010100110011 +"
b1000000010000110000010100110011 #
b1000000010000110000010100110011 F
b1000000010000110000010100110011 }
b1000000010000110000010100110011 9"
b1000000010000110000010100110011 D
b1000000010000110000010100110011 7"
b1000000010000110000010100110011 <"
b11000 =
b11000 0"
b10000100010 ""
b11000 <
b11000 {
b11000 :"
b11000 O
b11000 8"
b11000 ;"
b11000 >
b11000 6"
b11000 D"
1&
#80000
0&
#85000
b100000000 ;
b100000000 [
b100000000 ="
b100000000 6
b100000000 S
b100000000 k
b100 m
b100 q
b10000 l
b10000 p
b100000000 _
b100000000 s
b100 t
b10000 J
b10000 Z
b10000 >"
b100 ?
b100 a
b100 ."
b10000 I
b10000 X
b10000 ^
b10000 @
b10000 b
b10000 -"
b101 i
b101 o
b100000000 C
b100000000 U
b100000000 g
b1001 7
b1001 T
b1001 j
b100 +
b100 v
b100 L"
b10000 .
b10000 x
b10000 K"
b101 N
b101 e
b101 '"
b1001 :
b1001 `
b1001 1"
b1 ,
b1 3"
b1 H"
b100 /
b100 2"
b100 G"
b1 )"
b100100001010010110011 "
b100100001010010110011 E
b100100001010010110011 R
b100100001010010110011 %
b100100001010010110011 H
b100100001010010110011 W
b100100001010010110011 f
b100100001 #"
b100000001000 %"
b1001 $"
b1 &"
b1001 z
b1 w
b100 y
b0 ~
b1 !"
b100100001010010110011 $
b100100001010010110011 G
b100100001010010110011 d
b100100001010010110011 +"
b100100001010010110011 #
b100100001010010110011 F
b100100001010010110011 }
b100100001010010110011 9"
b100100001010010110011 D
b100100001010010110011 7"
b100100001010010110011 <"
b11100 =
b11100 0"
b100000100100 ""
b11100 <
b11100 {
b11100 :"
b11100 O
b11100 8"
b11100 ;"
b11100 >
b11100 6"
b11100 D"
1&
#90000
0&
#95000
b10011 ;
b10011 [
b10011 ="
b10011 6
b10011 S
b10011 k
b10000 m
b10000 q
b100011 l
b100011 p
b10011 _
b10011 s
b100011 J
b100011 Z
b100011 >"
b10000 ?
b10000 a
b10000 ."
b100011 I
b100011 X
b100011 ^
b100011 @
b100011 b
b100011 -"
b100 i
b100 o
b10011 C
b10011 U
b10011 g
b10100 7
b10100 T
b10100 j
b10000 +
b10000 v
b10000 L"
b100011 .
b100011 x
b100011 K"
b100 N
b100 e
b100 '"
b10100 :
b10100 `
b10100 1"
b100 ,
b100 3"
b100 H"
b110 /
b110 2"
b110 G"
b100000000 )"
b1000000010000110000101000110011 "
b1000000010000110000101000110011 E
b1000000010000110000101000110011 R
b1000000010000110000101000110011 %
b1000000010000110000101000110011 H
b1000000010000110000101000110011 W
b1000000010000110000101000110011 f
b1000000010000110000 #"
b10000010100 %"
b10000010100 $"
b10000000100 &"
b10100 z
b100 w
b110 y
b100000 ~
b0 !"
b1000000010000110000101000110011 $
b1000000010000110000101000110011 G
b1000000010000110000101000110011 d
b1000000010000110000101000110011 +"
b1000000010000110000101000110011 #
b1000000010000110000101000110011 F
b1000000010000110000101000110011 }
b1000000010000110000101000110011 9"
b1000000010000110000101000110011 D
b1000000010000110000101000110011 7"
b1000000010000110000101000110011 <"
b100000 =
b100000 0"
b10000110100 ""
b100000 <
b100000 {
b100000 :"
b100000 O
b100000 8"
b100000 ;"
b100000 >
b100000 6"
b100000 D"
1&
#100000
0&
#105000
b0 ;
b0 [
b0 ="
b0 6
b0 S
b0 k
b0 _
b0 s
b1 i
b1 o
b0 C
b0 U
b0 g
b111 7
b111 T
b111 j
b1 N
b1 e
b1 '"
b111 :
b111 `
b111 1"
b111 )"
b10000110111001110110011 "
b10000110111001110110011 E
b10000110111001110110011 R
b10000110111001110110011 %
b10000110111001110110011 H
b10000110111001110110011 W
b10000110111001110110011 f
b10000110111 #"
b100000000110 %"
b111 $"
b100 &"
b111 z
b0 ~
b111 !"
b10000110111001110110011 $
b10000110111001110110011 G
b10000110111001110110011 d
b10000110111001110110011 +"
b10000110111001110110011 #
b10000110111001110110011 F
b10000110111001110110011 }
b10000110111001110110011 9"
b10000110111001110110011 D
b10000110111001110110011 7"
b10000110111001110110011 <"
b100100 =
b100100 0"
b100000101010 ""
b100100 <
b100100 {
b100100 :"
b100100 O
b100100 8"
b100100 ;"
b100100 >
b100100 6"
b100100 D"
1&
#110000
0&
#115000
b111110111 ;
b111110111 [
b111110111 ="
b111110111 C
b111110111 U
b111110111 g
b111110111 6
b111110111 S
b111110111 k
b111110100 m
b111110100 q
b111110111 _
b111110111 s
b111110100 ?
b111110100 a
b111110100 ."
b10 i
b10 o
b1000 7
b1000 T
b1000 j
b111110100 +
b111110100 v
b111110100 L"
b10 N
b10 e
b10 '"
b1000 :
b1000 `
b1000 1"
b1011 ,
b1011 3"
b1011 H"
b110 )"
b101100110110010000110011 "
b101100110110010000110011 E
b101100110110010000110011 R
b101100110110010000110011 %
b101100110110010000110011 H
b101100110110010000110011 W
b101100110110010000110011 f
b101100110110 #"
b1000 %"
b1000 $"
b1011 &"
b1000 z
b1011 w
b110 !"
b101100110110010000110011 $
b101100110110010000110011 G
b101100110110010000110011 d
b101100110110010000110011 +"
b101100110110010000110011 #
b101100110110010000110011 F
b101100110110010000110011 }
b101100110110010000110011 9"
b101100110110010000110011 D
b101100110110010000110011 7"
b101100110110010000110011 <"
b101000 =
b101000 0"
b110000 ""
b101000 <
b101000 {
b101000 :"
b101000 O
b101000 8"
b101000 ;"
b101000 >
b101000 6"
b101000 D"
1&
#120000
0&
#125000
b111 ;
b111 [
b111 ="
b111 6
b111 S
b111 k
b11 8
b11 J"
b11 O"
b0 4
b0 I"
b0 P"
b0 K
b0 Y
b0 @"
b100 l
b100 p
b111 _
b111 s
11
b11 9
b11 \
b11 M"
b0 5
b0 ]
b0 N"
b0 J
b0 Z
b0 >"
0P
1Q
b100 I
b100 X
b100 ^
b100 @
b100 b
b100 -"
b1 B
b1 V
b1 h
b11 i
b11 o
b11 m
b11 q
b111 C
b111 U
b111 g
b11 7
b11 T
b11 j
b0 ?
b0 a
b0 ."
b0 +
b0 v
b0 L"
b100 .
b100 x
b100 K"
b1011 N
b1011 e
b1011 '"
b11 A
b11 c
b11 ,"
b11 :
b11 `
b11 1"
b0 ,
b0 3"
b0 H"
b1 /
b1 2"
b1 G"
0*
b10 )"
b1010000110000011 "
b1010000110000011 E
b1010000110000011 R
b1010000110000011 %
b1010000110000011 H
b1010000110000011 W
b1010000110000011 f
b1010 #"
b100000000010 %"
b11 $"
b0 &"
b11 z
b0 w
b1 y
b10 !"
b11 |
b1010000110000011 $
b1010000110000011 G
b1010000110000011 d
b1010000110000011 +"
b1010000110000011 #
b1010000110000011 F
b1010000110000011 }
b1010000110000011 9"
b1010000110000011 D
b1010000110000011 7"
b1010000110000011 <"
b101100 =
b101100 0"
b100000101110 ""
b101100 <
b101100 {
b101100 :"
b101100 O
b101100 8"
b101100 ;"
b101100 >
b101100 6"
b101100 D"
1&
#130000
0&
#135000
